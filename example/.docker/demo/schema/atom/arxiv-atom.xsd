<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ SPDX-FileCopyrightText: 2017-2024 Enedis
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~
  -->

<!-- from https://arxiv.org/schemas/atom.xsd -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:a="http://arxiv.org/schemas/atom"
        targetNamespace="http://arxiv.org/schemas/atom" elementFormDefault="qualified">
    <annotation>
        <documentation>Schema to validate arXiv extension elements in Atom feeds from the arXiv API (see
            http://arxiv.org/help/api) and for SWORD upload interface. Simeon Warner - 2007-11-28 Check with:
            http://www.w3.org/2001/03/webdata/xsv?docAddrs=http%3A%2F%2Farxiv.org%2Fschemas%2Fatom.xsd&amp;warnings=on&amp;
            keepGoing=on&amp;style=xsl# OK example:
            http://www.w3.org/2001/03/webdata/xsv?docAddrs=http%3A%2F%2Farxiv.org%2Fschemas%2Fatom_good_example1.xml&amp;
            warnings=on&amp;keepGoing=on&amp;style=xsl# $Id: atom.xsd,v 1.3 2009/01/14 16:21:33 arxiv Exp $
        </documentation>
    </annotation>
    <element name="primary_category" type="a:category_type">
        <annotation>
            <documentation>The arXiv classification system supports multiple Atom category elements, as well as a
                primary classification. The primary classification is a replica of an Atom category element, except it
                has the name &gt;arxiv:primary_category>
                and indicates which of the Atom category elements corresponds to the primary category.
            </documentation>
        </annotation>
    </element>
    <element name="comment" type="string">
        <annotation>
            <documentation>Contains the typical author comments found on most arXiv articles. Should place restructions
                on length and characters permitted.
            </documentation>
        </annotation>
    </element>
    <element name="affiliation" type="string">
        <annotation>
            <documentation>Intended as a sub-element of the Atom author element. There may be one or more affiliation
                elements that indicate affilitions for the author in relation to the article being described. Should
                place restrictions on lenght and characters permitted.
            </documentation>
        </annotation>
    </element>
    <element name="journal_ref" type="string">
        <annotation>
            <documentation>A bibliographic journal reference in human readable form.</documentation>
        </annotation>
    </element>
    <element name="doi" type="a:doi_type">
        <annotation>
            <documentation>A DOI for another version of the article in question. Should be able to append to
                http://dx.doi.org/ to get a URI that will resolve.
            </documentation>
        </annotation>
    </element>
    <!--  TYPE DEFINITIONS  -->
    <complexType name="category_type">
        <annotation>
            <documentation>This element mirrors the atom:category element but provides information about which of the
                category elements is the primary. The term, schema and label attributes should match one of the
                atom:category elements content wrapper with attributes identifying the feed. This is a schema-ificiation
                of the RNG for atom:category: atomCategory = element atom:category { atomCommonAttributes, attribute
                term { text }, attribute scheme { atomUri }?, attribute label { text }?, undefinedContent }
            </documentation>
        </annotation>
        <!--  uses "Shorthand for an empty Complex Type, see http://www.w3.org/TR/xmlschema-0/#emptyContent -->
        <attribute name="term" type="string" use="required"/>
        <attribute name="scheme" type="anyURI"/>
        <attribute name="label" type="string"/>
    </complexType>
    <simpleType name="doi_type">
        <annotation>
            <documentation>Regex taken from http://www.doi.org/handbook_2000/appendix_6.pdf [2007-11-28]</documentation>
        </annotation>
        <restriction base="string">
            <pattern value="[^\./]+(\.[^\./]+)*/.+"/>
        </restriction>
    </simpleType>
</schema>
